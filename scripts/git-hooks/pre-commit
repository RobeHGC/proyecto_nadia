#!/bin/bash
# MCP Security Pre-commit Hook
# Install: cp scripts/git-hooks/pre-commit .git/hooks/pre-commit && chmod +x .git/hooks/pre-commit

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${YELLOW}Running MCP security checks before commit...${NC}"

# Check if MCP workflow script exists
if [ ! -f "./scripts/mcp-workflow.sh" ]; then
    echo -e "${RED}Error: MCP workflow script not found${NC}"
    echo "Please ensure scripts/mcp-workflow.sh exists"
    exit 1
fi

# Run security check
echo -e "${YELLOW}Scanning for security issues...${NC}"
if ! ./scripts/mcp-workflow.sh security-check; then
    echo -e "${RED}Security issues detected!${NC}"
    echo "Please fix the security issues before committing."
    echo "Run './scripts/mcp-workflow.sh security-check' for details."
    exit 1
fi

# Additional checks for common security issues
echo -e "${YELLOW}Checking for hardcoded secrets...${NC}"

# Check for potential API keys in staged files
if git diff --cached --name-only | xargs grep -E "(api_key|secret|password|token).*=.*['\"][^'\"]+['\"]" 2>/dev/null; then
    echo -e "${RED}Potential hardcoded secrets detected!${NC}"
    echo "Please use environment variables instead of hardcoding secrets."
    exit 1
fi

# Check for .env files being committed
if git diff --cached --name-only | grep -E "^\.env$|^\.env\." 2>/dev/null; then
    echo -e "${RED}Attempting to commit .env file!${NC}"
    echo ".env files should never be committed to version control."
    exit 1
fi

echo -e "${GREEN}All security checks passed!${NC}"

# Optional: Run quick tests (uncomment if desired)
# echo -e "${YELLOW}Running quick unit tests...${NC}"
# if command -v pytest &> /dev/null; then
#     pytest tests/ -m unit -q --tb=short || exit 1
# fi

exit 0